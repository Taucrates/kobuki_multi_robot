<!--
  Kobuki rplidar launcher
 -->
<launch>
  <arg name="robot_name" default="kobuki"/>
  <arg name="serial_port" default="/dev/rplidar"/>
  <!-- Set TFs required to run Gmapping -->
  <group ns="$(arg robot_name)">
    <!-- Set TFs required to run Gmapping (uncomment if joint_state_publisher is not launched)
    <node pkg="tf" type="static_transform_publisher" name="basefp_to_baselink" args="0.0 0.0 0.0 0.0 0.0 0.0 $(arg robot_name)/base_footprint $(arg robot_name)/base_link 100"/>
    <node pkg="tf" type="static_transform_publisher" name="basefp_to_scan" args="0.145 0.0 0.0 0.0 0.0 0.0 $(arg robot_name)/base_link $(arg robot_name)/base_scan 100"/> -->
    
    <!-- Lidar laser node -->
    <node name="rplidarNode"          pkg="rplidar_ros"  type="rplidarNode" output="screen">
      <param name="serial_port"         type="string" value="$(arg serial_port)"/>  
      <param name="serial_baudrate"     type="int"    value="256000"/>
      <param name="frame_id"            type="string" value="$(arg robot_name)/base_scan"/>
      <param name="inverted"            type="bool"   value="false"/>
      <param name="angle_compensate"    type="bool"   value="true"/>
      <remap from="scan" to="/$(arg robot_name)/raw_scan"/>
    </node>

    <!-- Laser filters -->
    <node name="scan_filter"          pkg="laser_filters"  type="scan_to_scan_filter_chain" output="screen">
      <rosparam file="$(find kobuki_multi_robot)/param/laser_filters_params.yaml" command="load"/>
      <remap from="scan" to="/$(arg robot_name)/raw_scan"/>
      <remap from="scan_filtered" to="/$(arg robot_name)/scan"/>
    </node>
  </group>
</launch>

